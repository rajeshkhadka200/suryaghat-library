{"version":3,"sources":["Utilities/StaticContents/Footer.js","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Admin/AdminPages/AddAdmin.js"],"names":["Footer","useHistory","useState","loading","setloading","userData","useContext","ContexStore","username","email","usermsg","setusermsg","className","list","url","map","data","key","to","onSubmit","e","preventDefault","emailjs","sendForm","process","target","then","setTimeout","toast","success","error","info","value","name","required","placeholder","onChange","type","disabled","style","background","cursor","height","width","src","serverBaseURI","href","Date","getFullYear","toString","memo","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","instance","Constructor","TypeError","this","status","text","responseText","sendPost","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","substr","arr","offset","arguments","length","undefined","toLowerCase","v4","options","buf","rnds","random","AddAdmin","admin","image","Check","newadminData","setnewadminData","uid","uuidv4","a","getApi","post","response","alert","catch","err","AdminNav","AdminLoginStyle","loginWrapper","loginBox","formControl","btnGroup"],"mappings":"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","file":"static/js/17.6fd9971a.chunk.js","sourcesContent":["import React, { useState, useContext, memo } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { ContexStore } from \"../../ContexStore/ContexStore\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./footer.css\";\r\nimport { serverBaseURI } from \"../file.config\";\r\n\r\nconst Footer = () => {\r\n  const history = useHistory();\r\n  const serID = process.env.REACT_APP_SERVICE_ID;\r\n  const tempID = process.env.REACT_APP_TEMPLETE_ID;\r\n  const userID = process.env.REACT_APP_USER_ID;\r\n  const [loading, setloading] = useState(false);\r\n  const { userData } = useContext(ContexStore);\r\n  const { username, email } = userData;\r\n  const [usermsg, setusermsg] = useState(\"\");\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    if (!username || !email) {\r\n      setloading(true);\r\n      setTimeout(() => {\r\n        toast.info(\"Please Login to Send message\");\r\n        setloading(false);\r\n      }, 1000);\r\n    } else {\r\n      setloading(true);\r\n      emailjs.sendForm(serID, tempID, e.target, userID).then(\r\n        () => {\r\n          setTimeout(() => {\r\n            toast.success(\"Meessage Sent Successfully!\");\r\n            setloading(false);\r\n            setusermsg(\"\");\r\n          }, 1000);\r\n        },\r\n        () => {\r\n          setTimeout(() => {\r\n            toast.error(\"Failed sending message\");\r\n            setloading(false);\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const quickLinks = [\r\n    {\r\n      list: \"Home\",\r\n      url: \"/\",\r\n    },\r\n    {\r\n      list: \"About\",\r\n      url: \"/about\",\r\n    },\r\n    {\r\n      list: \"Contents\",\r\n      url: \"/contents\",\r\n    },\r\n    {\r\n      list: \"Store\",\r\n      url: \"/store\",\r\n    },\r\n    {\r\n      list: \"Gallery\",\r\n      url: \"/store/gallery\",\r\n    },\r\n  ];\r\n  // const scrollup = () => {\r\n  //   window.scrollTo(0, 0);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <footer>\r\n        <ToastContainer />\r\n        <div className=\"content\">\r\n          <div className=\"left box\">\r\n            <div className=\"upper\">\r\n              <div className=\"topic\"> Suryaghat Library</div>\r\n              <p>\r\n                Suryaghat Library is a popular non profit organization\r\n                established with the motive of providing the free online book,\r\n                Audio and Videos service.\r\n              </p>\r\n            </div>\r\n            <div className=\"lower\">\r\n              <div className=\"topic\">Contact us</div>\r\n              <div className=\"phone cncttxt\">\r\n                <i className=\"fas fa-phone-volume\"></i>+977-9840767766\r\n              </div>\r\n              <div className=\"email cncttxt\">\r\n                <i className=\"fas fa-envelope\"></i>\r\n                haribabalibraryofficial45.np@gmail.com\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"middle box\">\r\n            <div className=\"topic\">Quiks Links</div>\r\n            {quickLinks.map((data, key) => {\r\n              const { url, list } = data;\r\n              return (\r\n                <div>\r\n                  <NavLink to={url}>{list}</NavLink>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"right box\">\r\n            <div className=\"topic\">Contact Us</div>\r\n            <form onSubmit={sendEmail}>\r\n              <textarea\r\n                value={usermsg}\r\n                name=\"message\"\r\n                required\r\n                placeholder=\"Leave a message...\"\r\n                onChange={(e) => setusermsg(e.target.value)}\r\n              />\r\n              <input type=\"hidden\" value={username} name=\"username\" />\r\n              <input type=\"hidden\" value={email} name=\"useremail\" />\r\n              <button\r\n                disabled={loading}\r\n                type=\"submit\"\r\n                style={{\r\n                  background: loading ? \"grey\" : \"\",\r\n                  cursor: loading ? \"not-allowed\" : \"pointer\",\r\n                }}\r\n              >\r\n                {loading && (\r\n                  <img\r\n                    height=\"20px\"\r\n                    width=\"20px\"\r\n                    src={`${serverBaseURI}/hariBaba/api/uploads/Images/loading.jpg`}\r\n                  />\r\n                )}\r\n                &nbsp; &nbsp;\r\n                {loading ? \"Sending..\" : \"Send\"}\r\n              </button>\r\n            </form>\r\n            <div className=\"media-icons\">\r\n              <a\r\n                href=\"https://www.facebook.com/haribabalibrary/\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fab fa-facebook-f\"></i>\r\n              </a>\r\n              <a href=\"#\" target=\"_blank\">\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </a>\r\n\r\n              <a href=\"#\" target=\"_blank\">\r\n                <i className=\"fab fa-linkedin-in\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <p className=\"cpyrght\">\r\n            Copyright © {new Date().getFullYear().toString()} All right reserved\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Footer);\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useState, useContext } from \"react\";\r\nimport AdminLoginStyle from \"../AdminCSS/AdminLogin.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Check, { AddFav } from \"../AdminComponents/Check\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport AdminNav from \"../AdminComponents/AdminNav\";\r\nimport Footer from \"../../Utilities/StaticContents/Footer\";\r\nimport { ContexStore } from \"../../ContexStore/ContexStore\";\r\nimport { serverBaseURI } from \"../../Utilities/file.config\";\r\nimport { getApi } from \"../../services\";\r\nconst AddAdmin = () => {\r\n  const serID = process.env.REACT_APP_SERVICE_ID;\r\n  const tempID = process.env.REACT_APP_TEMPLETE_ID;\r\n  const userID = process.env.REACT_APP_USER_ID;\r\n  const { admin } = useContext(ContexStore);\r\n  const { image } = admin;\r\n\r\n  Check();\r\n\r\n  const [newadminData, setnewadminData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const handleOnchange = (e) => {\r\n    const { value, name } = e.target;\r\n    setnewadminData({ ...newadminData, [name]: value });\r\n  };\r\n  const { email } = newadminData;\r\n  const uid = uuidv4();\r\n\r\n  const AddAdmin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await getApi\r\n      .post(\"/hariBaba/api/admin/addadmin\", { email: email, uid: uid })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          alert(\"Wait for the conformation...\");\r\n          setnewadminData({\r\n            email: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 404) {\r\n          toast.error(`Email already exist`);\r\n        }\r\n      });\r\n  };\r\n  //AddFav(`${serverBaseURI}/hariBaba/api/uploads/Images/${image}`);\r\n  return (\r\n    <>\r\n      <AdminNav />\r\n      <ToastContainer />\r\n      <form onSubmit={AddAdmin}>\r\n        <div className={AdminLoginStyle.loginWrapper}>\r\n          <div className={AdminLoginStyle.loginBox}>\r\n            <span>Add Admin</span>\r\n\r\n            <div className={AdminLoginStyle.formControl}>\r\n              <label>Email</label>\r\n              <input\r\n                name=\"email\"\r\n                onChange={handleOnchange}\r\n                placeholder=\"Enter email\"\r\n                type=\"email\"\r\n                required\r\n                value={newadminData.email}\r\n              />\r\n            </div>\r\n\r\n            <div className={AdminLoginStyle.btnGroup}>\r\n              <button type=\"submit\">Add Admin</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAdmin;\r\n"],"sourceRoot":""}