{"version":3,"sources":["Admin/AdminPages/AdminProduct.js"],"names":["AdminProduct","history","useHistory","Cookies","get","push","useState","apiData","setapiData","useEffect","getApi","then","response","data","one","setone","two","settwo","three","setthree","four","setfour","verified","setverified","notverified","setnotverified","editor","seteditor","searchvalue","setsearchvalue","className","productCSS","filterheader","style","borderBottom","onClick","inpWrapper","placeholder","value","onChange","e","target","type","productWrapper","sort","a","b","pro_title","localeCompare","filter","isVerified","iseditor","toLowerCase","includes","map","key","pro_id","pro_img1","pro_desc","cat_title","sub_cat_title","owner_name","genre_title","lang_title","emo_title","publish_date","src","pro_rating","google_id","keys","length"],"mappings":"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","file":"static/js/28.31065f92.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport productCSS from \"../AdminCSS/AdminProduct.module.css\";\r\nimport AdminNav from \"../AdminComponents/AdminNav\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport AdminSingleComp from \"../AdminComponents/AdminSingleComp\";\r\nimport { getApi } from \"../../services\";\r\nconst AdminProduct = () => {\r\n  let history = useHistory();\r\n  const isAdmin = Cookies.get(\"__tcphblad__\");\r\n  if (!isAdmin) {\r\n    history.push(\"/route/haribabalibrary/admin/login\");\r\n  }\r\n  const [apiData, setapiData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getApi.get(\"/hariBaba/api/productadmin\").then((response) => {\r\n      setapiData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const [one, setone] = useState(true);\r\n  const [two, settwo] = useState(false);\r\n  const [three, setthree] = useState(false);\r\n  const [four, setfour] = useState(false);\r\n  const [verified, setverified] = useState(false);\r\n  const [notverified, setnotverified] = useState(false);\r\n  const [editor, seteditor] = useState(false);\r\n  const filterverified = () => {\r\n    setnotverified(false);\r\n    setverified(true);\r\n    settwo(true);\r\n    setone(false);\r\n    setthree(false);\r\n    setfour(false);\r\n    seteditor(false);\r\n  };\r\n\r\n  const filternotverified = () => {\r\n    setverified(false);\r\n    setnotverified(true);\r\n    setthree(true);\r\n    setone(false);\r\n    settwo(false);\r\n    setfour(false);\r\n    seteditor(false);\r\n  };\r\n\r\n  const filterallProduct = () => {\r\n    setverified(false);\r\n    setnotverified(false);\r\n    setone(true);\r\n    setthree(false);\r\n    settwo(false);\r\n    setfour(false);\r\n    seteditor(false);\r\n  };\r\n  const filtereditor = () => {\r\n    seteditor(true);\r\n    setnotverified(false);\r\n    setverified(false);\r\n    settwo(false);\r\n    setone(false);\r\n    setthree(false);\r\n    setfour(true);\r\n  };\r\n  const [searchvalue, setsearchvalue] = useState(\"\");\r\n  //const redirectSearch = (e) => {\r\n  //  e.preventDefault();\r\n  //  history.push(\r\n  //    `/route/haribabalibrary/admin/dashboard/search?search_query=${searchvalue}`\r\n  //  );\r\n  //};\r\n  var a = false;\r\n  return (\r\n    <>\r\n      <AdminNav />\r\n      <div>\r\n        <div className={productCSS.filterheader}>\r\n          <span\r\n            style={{ borderBottom: one ? \"3px solid red\" : \"\" }}\r\n            onClick={filterallProduct}\r\n          >\r\n            All Products\r\n          </span>\r\n          <span\r\n            style={{ borderBottom: two ? \"3px solid red\" : \"\" }}\r\n            onClick={filterverified}\r\n          >\r\n            Verified\r\n          </span>\r\n          <span\r\n            style={{ borderBottom: three ? \"3px solid red\" : \"\" }}\r\n            onClick={filternotverified}\r\n          >\r\n            Non Verified\r\n          </span>\r\n          <span\r\n            style={{ borderBottom: four ? \"3px solid red\" : \"\" }}\r\n            onClick={filtereditor}\r\n          >\r\n            Editor's Pick\r\n          </span>\r\n        </div>\r\n        <div className={productCSS.inpWrapper}>\r\n          <input\r\n            placeholder=\"Search goes here\"\r\n            value={searchvalue}\r\n            onChange={(e) => {\r\n              setsearchvalue(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </div>\r\n        <div className={productCSS.productWrapper}>\r\n          {apiData\r\n            .sort((a, b) => a.pro_title.localeCompare(b.pro_title))\r\n            .filter((data) => {\r\n              if (!verified) {\r\n                return data;\r\n              } else {\r\n                return data.isVerified === 1;\r\n              }\r\n            })\r\n            .filter((data) => {\r\n              if (!notverified) {\r\n                return data;\r\n              } else {\r\n                return data.isVerified === 0;\r\n              }\r\n            })\r\n            .filter((data) => {\r\n              if (!editor) {\r\n                return data;\r\n              } else {\r\n                return data.iseditor === 1;\r\n              }\r\n            })\r\n            .filter((data) => {\r\n              if (searchvalue === \"\") {\r\n                return data;\r\n              } else {\r\n                a = true;\r\n                return data.pro_title.toLowerCase().includes(searchvalue);\r\n              }\r\n            })\r\n            .map((data, key) => {\r\n              const {\r\n                pro_id,\r\n                pro_title,\r\n                pro_img1,\r\n                pro_desc,\r\n                cat_title,\r\n                sub_cat_title,\r\n                owner_name,\r\n                genre_title,\r\n                lang_title,\r\n                emo_title,\r\n                publish_date,\r\n                isVerified,\r\n                src,\r\n                iseditor,\r\n                pro_rating,\r\n                google_id,\r\n              } = data;\r\n\r\n              return (\r\n                <>\r\n                  {/*{myArray.fill(pro_rating)}*/}\r\n                  <ToastContainer />\r\n                  <AdminSingleComp\r\n                    pro_id={pro_id}\r\n                    pro_title={pro_title}\r\n                    pro_img1={pro_img1}\r\n                    pro_desc={pro_desc}\r\n                    cat_title={cat_title}\r\n                    sub_cat_title={sub_cat_title}\r\n                    owner_name={owner_name}\r\n                    genre_title={genre_title}\r\n                    lang_title={lang_title}\r\n                    emo_title={emo_title}\r\n                    publish_date={publish_date}\r\n                    isVerified={isVerified}\r\n                    src={src}\r\n                    iseditor={iseditor}\r\n                    pro_rating={pro_rating}\r\n                    google_id={google_id}\r\n                    keys={key}\r\n                    apiData={apiData.length}\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n        {/*{isFooter && <Footer />}*/}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminProduct;\r\n"],"sourceRoot":""}